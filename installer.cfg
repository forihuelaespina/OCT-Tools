# File: installer.cfg
#
# Code to generate a Windows installer with python package pynsist
#
# To generate the installer run from a miniconda cmd at the directory where
#this .cfg file is, and with admin permissions:
#
#   python -m nsist installer.cfg
#
#
# 
# See:
#   https://pypi.org/project/pynsist/
#   https://pynsist.readthedocs.io/
#
#
## src/ as a pacakage or directory ==========================================
#
# The src/ will be loaded as package because of the __init__.py file
#within the directory, but for some reason, that installed "copy" is
#unreachable by Javier's machine. Hence, I'm further copying the whole
#directory (see below), and in the main file (i.e. OCTToolsApp), the
#corresponding folder is added to the path.
#
# Yet as long as I keep my __init__.py file in the src/ folder, its copy
#in the packages directory pkgs/ will be also "installed".
#
# At this time, I'm not sure whether OCTTools will eventually become a
#package, so I'm keeping the __init__.py and thus both copies in the
#installation.
#
#
#
## imutils ==================================================================
#
# The imutils da bastantes problemas ya que no tiene un .whl asociado
#Para generar el .whl del paquete, desde la consola de python (e.g. en pyzo)
#se puede ejecutar:
#
#   pip wheel imutils
#   pip install imutils-0.5.1-py3-none-any.whl
#
# Estas dos líneas funcionan (el *.whl se genera en c:\users\felipe\).
# Pero aún así, es posible que pynsist/nsist no lo encuentre y
# devuelva:
#
#   nsist.pypi.NoWheelError: No compatible wheels found for imutils 0.5.1
#
#
# Lo solventé copiando el archivo a un directorio y
#declarando este directorioi en extra_wheel_sources;
#
# extra_wheel_sources = src/whl
#
#
#
## tkinter ==================================================================
#
# The tkinter package is necessary for matplotlib and pynsist is unable to get
#it automatically. See:
#
# https://pynsist.readthedocs.io/en/latest/faq.html#packaging-with-tkinter
#
# Since the tkinter version "copied" under the above instructions has to be
#the binaries corresponding to the version of python being used, if I ever
#upgrade my python, I'll have to also manually "recopy" the tkinter library
#files according to those instructions.
#
#
#
#
## OCTToolsApp_0.1.exe ======================================================
#
# El instalador OCTToolsApp_0.1.exe se genera en build\nsis\OCTToolsApp_0.1.exe
#
#
#
#
#
#
# 
# @dateCreated: 3-Sep-2018
# @authors: Felipe Orihuela-Espina
# @dateModified: 11-Sep-2018
#
# See also:
# 


## Log
#
# 3-Sep-2018: FOE: File created
#
# 3/11-Sep-2018: FOE:
#   * Several changes to fine tune the generation of the installer.
#   * Added "hidden" packages; those not used directly by our code, but that
#   are call by our dependencies.
#
# 14-Sep-2018: FOE: Added imort of tkinter
#




## APPLICATION =================================================
[Application]
name=OCTToolsApp
version=0.1
publisher=Laboratorio de Bioseñales CCC INAOE
# How to launch the app - this calls the 'main' function from the 'myapp' package:
entry_point=src.OCTToolsApp:main
icon=resources/inaoe.ico
console=true
license_file=./LICENSE


#Not yet working
## ADDITIONAL SHORTCUTS (for the .bat) ===================
[Shortcut OCTToolsApp.bat]
target=$INSTDIR\OCTToolsApp.bat
icon=resources/inaoe.ico
console=true

# NOTA: Los shortcuts no funcionaran por que el directorio de trabajo
# WORKING DIRECTORY que se pone a %HOMEDRIVE%\%HOMEPATH% no expande estas
# variables. Por supuesto, se puede editar manualmente el fichero .nsi y
# volver a ejecutar el empaquetador (NSIS), o bien modificar los shortcuts
# manualmente:
# 1) En el menu de inicio, right click sobre el shortcut
# 2) Mas-> Abrir ubicación del archivo
# 3) Seleccionar el enlace (right click) y elegir Propiedades
# 4) Editar el campo "Inicio en" al directorio de instalación de la
#aplicación e.g. C:\Users\<TU_NOMBRE_DE_USUARIO_AQUI>\AppData\Local\OCTToolsApp\
#


## PYTHON =================================================
[Python]
version=3.6.5
bitness=64
#32 or 64, to use 32-bit (x86) or 64-bit (x64) Python. On Windows,
#this defaults to the version you’re using, so that compiled
#modules will match. On other platforms, it defaults to 32-bit.
format=bundled


## SECTION =================================================
[Include]
# Packages from PyPI that your application requires, one per line
extra_wheel_sources = resources/whl/

# These must have wheels on PyPI (or on the extra_wheel_sources directories):
#
# Some of the following packages are never used directly by our code, but
#are needed by some other that we use;
#
#   pyparsing -> Used by matplotlib
#   six -> Used by matplotlib
#   kiwisolver -> Used by matplotlib
#   python-dateutil -> Used by matplotlib
#   Cycler -> Used by matplotlib
#
pypi_wheels = html5lib==0.999999999
    numpy==1.15.1
    scikit-image==0.14.0
    scipy==1.1.0
    kiwisolver==1.0.1
    python-dateutil==2.7.3
    cycler==0.10.0
    six==1.11.0
    pyparsing==2.2.0
    matplotlib==2.2.2
    opencv-contrib-python==3.4.2.17
    opencv-python==3.4.2.17
    PyQt5==5.11.2
    PyQt5.sip==4.19.12
    imutils==0.5.1




#    sip==4.19.8

##Hidden imports (2nd part of the above list of packages:
#
# SIP - since PyQt5 5.11, SIP is getting installed as a separate package
#
#


# To bundle packages which don't publish wheels, see the docs on the
# config file.
#
#
packages=
    tkinter
    _tkinter

    
# Other files and folders that should be installed
files = LICENSE
    README.md
    src/
    lib/
    resources/OCTToolsApp.bat > $INSTDIR

# The lib/ folder actually contains tcl as indicated in 
#
# https://pynsist.readthedocs.io/en/latest/faq.html#packaging-with-tkinter
#

    
    
#exclude: Files not to be copied    
exclude = src/Test.py
    src/setup.py




## BUILD =================================================
[Build]

#directory: This is the output directory where the installer will be written
directory = build/nsis/






